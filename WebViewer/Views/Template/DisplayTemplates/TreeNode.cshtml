@using TraceEventAPIServer.Extensions
@model TraceEventAPIServer.Models.TreeNode
<tr data-tt-id="@Html.Encode(Model.ContextId)" data-tt-parent-id="@Html.Encode(Model.ParentContextId)" data-tt-branch="@Model.HasChildren.ToString().ToLower()">
    <td class="node">@Html.MyRouteLink(Model.Name, "Callers", new { name = Model.Id }, new []{ "path" })</td>
    <td class="src">@Html.MyRouteLinkTargetTab("Source", "SourceViewer", new { name = (Model.ContextId.IndexOf('/') == -1) ? Model.ContextId : Model.ContextId.Substring(0, Model.ContextId.IndexOf('/')), path = (Model.ContextId.IndexOf('/') != -1) ? Model.ContextId.Substring(Model.ContextId.IndexOf('/') + 1) : "" }, new string[] { "path" })</td>
    <td>@Html.DisplayFor(x => x.InclusiveMetricPercent)%</td>
    <td>@Html.DisplayFor(x => x.InclusiveMetric)</td>
    <td>@Html.DisplayFor(x => x.InclusiveCount)</td>
    <td>@Html.DisplayFor(x => x.ExclusiveMetricPercent)%</td>
    <td>@Html.DisplayFor(x => x.ExclusiveMetric)</td>
    <td>@Html.DisplayFor(x => x.ExclusiveCount)</td>
    <td>@Html.DisplayFor(x => x.ExclusiveFoldedMetric)</td>
    <td>@Html.DisplayFor(x => x.FirstTimeRelativeMSec)</td>
    <td>@Html.DisplayFor(x => x.LastTimeRelativeMSec)</td>
</tr>