@{
    this.Layout = null;
}

@model SourceInformation

<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8" >
    <link rel="stylesheet" data-name="vs/editor/editor.main" href="../../../node_modules/monaco-editor/min/vs/editor/editor.main.css">
    <style type="text/css">
        html, body { background: #1E1E1E; height: 100%; font-family: Calibri; color: #fff; overflow-y: hidden; }
        #container { position: relative; width: 100%; height: 100%; }
        #hotlines { border: 1px solid #ccc; padding: 2px; margin-left: 20px; margin-bottom: 20px; }
        .lineDecoration { background: red; }
        .inlineDecoration { background-color: #603311; }

        table { color: #333; font-family: Calibri, Helvetica, Arial, sans-serif; width: 340px; border-collapse: collapse; border-spacing: 0; }
        td, th { border: 1px solid transparent; height: 20px; transition: all 0.3s; cursor: auto; }
        th { background: #DFDFDF; font-weight: bold; border-bottom: 1px solid #ccc; }
        td { background: #FAFAFA; text-align: center; }
        tr:nth-child(even) td { background: #F1F1F1; }
        tr:nth-child(odd) td { background: #FEFEFE; }

    </style>
</head>
<body>
<h1 style="margin-left: 20px;">BPerf Source Insight</h1>
<h4 style="margin-left: 20px;">@this.Model.BuildTimeFilePath</h4>
<table id="hotlines">
    <tr>
        <th>Line Number</th>
        <th>Metric</th>
    </tr>
    
    @foreach (var summary in this.Model.Summary)
    {
        @: <tr><td><a onclick="editor.revealPosition({ lineNumber: @summary.LineNumber, column: 1 }, true, false); return false;" href="#">Line #@summary.LineNumber</a></td><td>@summary.Metric</td></tr>
    }
</table>

<div id="container" style="width: 100%; height: 100%;"></div>

<script>var require = { paths: { 'vs': '../../../node_modules/monaco-editor/min/vs' } };</script>
<script src="../../../node_modules/monaco-editor/min/vs/loader.js"></script>
<script src="../../../node_modules/monaco-editor/min/vs/editor/editor.main.nls.js"></script>
<script src="../../../node_modules/monaco-editor/min/vs/editor/editor.main.js"></script>

<script>

    var jsonLines = @this.Html.Raw(this.Html.Json(this.Model.Lines));
    var text = "";
    for (var i = 0; i < jsonLines.length; ++i) {
        text += jsonLines[i].Line;
        if (i !== jsonLines.length - 1) {
            text += "\n";
        }
    }

    var editor = monaco.editor.create(document.getElementById('container'), {
        value: text,
        language: 'csharp',
        lineNumbers: true,
        readOnly: true,
        glyphMargin: true,
        scrollbar: { vertical: "auto", horizontal: "visible" },
        scrollBeyondLastLine: false,
        automaticLayout: true,
        theme: "vs-dark"
    });

    @foreach (var summary in this.Model.Summary)
    {
        @: editor.changeDecorations(function (changeAccessor) {
        @:     return changeAccessor.addDecoration({
        @:         startLineNumber: @summary.LineNumber,
        @:         startColumn: 1,
        @:         endLineNumber: @summary.LineNumber,
        @:        endColumn: 1
        @:     }, {
        @:         isWholeLine: true,
        @:         glyphMarginClassName: 'lineDecoration',
        @:         inlineClassName: 'inlineDecoration'
        @:     });
        @: });
    }

    @foreach (var summary in this.Model.Summary)
    {
        @: window.onload = function () { editor.revealPosition({ lineNumber: @summary.LineNumber, column: 1 }, true, false); }
        break;
    }

</script>

</body>
</html>