@{
    this.Layout = string.Empty;
}

@model StackEventListViewModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>BPerf</title>
    <link rel="stylesheet" href="/css/bootstrap.min.css">
    <link rel="stylesheet" href="/css/bootstrap-table.min.css">
</head>
<body>
<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <a class="navbar-brand" href="#">BPerf</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>

    <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav mr-auto">
            <li class="nav-item">
                <a class="nav-link" href="/ui/eventlist?filename=@this.Model.Filename">@this.Model.Filename</a>
            </li>
        </ul>
    </div>
</nav>

<table class="table">
    <thead class="thead-inverse">
    <tr>
        <th>Event Name</th>
        <th>Event Count</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var stackEvent in this.Model.StackEventTypeList.OrderByDescending(t => t.EventCount))
    {
        <tr>
            <td><a href="/ui/processlist?filename=@this.Model.Filename&stacktype=@stackEvent.EventId">@stackEvent.EventName</a></td>
            <td>@stackEvent.EventCount</td>
        </tr>
    }
    </tbody>
</table>
</body>
</html>
